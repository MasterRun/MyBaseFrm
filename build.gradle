// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from: "config.gradle"

//Android sdk版本以及相关三方依赖版本
def proVer = rootProject.ext.proVer
//基础库相关配置
def libConf = rootProject.ext.libConf

buildscript {
    ext {
        versions = [
                'kotlin': '1.3.50'
        ]
        //是否开启aop ,关闭后方便调试,但是依赖仍保留,更改后需要clean,重新编译
//        openAop = false
        openAop = true
    }

    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'http://developer.huawei.com/repo/' }
        maven { url 'https://jitpack.io' }
        mavenCentral()
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"

        if (openAop) {
            classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.4'
        }
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        //gitee/github上文件绝对路径
//        maven { url "https://gitee.com/runrunrun/maven_repository/raw/master" }
//        maven { url "https://raw.githubusercontent.com/MasterRun/maven_repository/master" }

        maven {
            credentials {
                username AliyunRepo_USERNAME
                password AliyunRepo_PASSWORD
            }
            url AliyunRepo_RELEASE
        }

        maven {
            credentials {
                username AliyunRepo_USERNAME
                password AliyunRepo_PASSWORD
            }
            url AliyunRepo_SNAPSHOT
        }

        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'http://developer.huawei.com/repo/' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "http://mvn.mob.com/android" }
//        maven { url 'https://esri.bintray.com/arcgis' }
        mavenCentral()
        flatDir { dirs 'libs' }
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
