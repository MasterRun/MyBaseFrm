apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: './maven-repository.gradle'

kapt {
    useBuildCache = true
    javacOptions {
        option("-Xmaxerrs", 500)
    }
    //开启databinding后如果使用kapt，需要进行如下配置
    //generateStubs = true
}

android {
    compileSdkVersion proVer.compileSdk
    defaultConfig {
        minSdkVersion proVer.minSdk
        versionCode libConf.core_mini.verCode
        versionName libConf.core_mini.verName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

//    buildFeatures {
//        dataBinding = true
//        viewBinding = true
//    }

    dataBinding {
        enabled = true
    }

    viewBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions { jvmTarget = 1.8 }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', '../proguard-rules.pro', '../tencentx5_proguard.pro'
        }
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    //android support
    api "androidx.multidex:multidex:${proVer.multidex}"
    api "androidx.legacy:legacy-support-v4:${proVer.androidx}"
    api "com.google.android.material:material:${proVer.androidx}"
    api "androidx.cardview:cardview:${proVer.androidx}"
    api "androidx.appcompat:appcompat:${proVer.androidx}"
    api "androidx.recyclerview:recyclerview:${proVer.androidx}"
    api "androidx.annotation:annotation:${proVer.androidx}"
    api "androidx.legacy:legacy-support-core-utils:${proVer.androidx}"
    api "androidx.constraintlayout:constraintlayout:1.1.3"

    //android arch
    api "androidx.arch.core:core-common:${proVer.arch}"
    api "androidx.arch.core:core-runtime:${proVer.arch}"
    api "androidx.lifecycle:lifecycle-common:${proVer.lifecycle}"
    api "androidx.lifecycle:lifecycle-livedata-core:${proVer.lifecycle}"
    api "androidx.lifecycle:lifecycle-livedata:${proVer.lifecycle}"
    api "androidx.lifecycle:lifecycle-runtime:${proVer.lifecycle}"
    api "androidx.lifecycle:lifecycle-viewmodel:${proVer.lifecycle}"

    //kotlin
    api "androidx.core:core-ktx:1.5.0-alpha01"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${proVer.kotlin}"
    api "org.jetbrains.kotlin:kotlin-reflect:${proVer.kotlin}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${proVer.kcoroutines}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${proVer.kcoroutines}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${proVer.kcoroutines}"

    //rxjava
    api "io.reactivex.rxjava2:rxjava:${proVer.rxjava}"
    api "io.reactivex.rxjava2:rxandroid:${proVer.rxandroid}"
    //rxpermissions
//    api "com.github.tbruyelle:rxpermissions:${proVer.rxpermissions}"

    //okhttp retrofit
    api "com.squareup.okhttp3:okhttp:${proVer.okhttp}"
    api "com.squareup.retrofit2:retrofit:${proVer.retrofit}"
    api "com.squareup.retrofit2:adapter-rxjava2:${proVer.retrofit}"
    //okdownload
    api 'com.liulishuo.okdownload:okdownload:1.0.5'
    //gson
    api "com.google.code.gson:gson:${proVer.gson}"
    api "com.squareup.retrofit2:converter-gson:${proVer.retrofit}"

    //Glide
    api "com.github.bumptech.glide:glide:${proVer.glide}"

    //log
//    api 'com.safframework.log:saf-logginginterceptor:1.3.3'
//    api 'com.safframework.log:saf-log:1.5.5
    api "com.safframework.log:saf-log-core:${proVer.saf_log}"
    api "com.safframework.log:saf-log-file:${proVer.saf_log}"
    api "com.safframework.log:saf-log-okhttp:${proVer.saf_log}"
    //UI库
    //qmui
    api "com.qmuiteam:qmui:${proVer.qmui}"

}
