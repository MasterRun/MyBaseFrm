apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

if (openAop) {
    apply plugin: 'com.hujiang.android-aspectjx'
}

kapt {
    useBuildCache = true
    javacOptions {
        option("-Xmaxerrs", 500)
    }
    //开启databinding后如果使用kapt，需要进行如下配置
    generateStubs = true
}

android {
    compileSdkVersion proVer.compileSdk
    defaultConfig {
        applicationId "com.jsongo.mybasefrm.app"
        targetSdkVersion proVer.targetSdk
        minSdkVersion proVer.minSdk
        versionCode libConf.app.verCode
        versionName libConf.app.verName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        debug {
            resValue "string", "SERVER_ADDRESS_RELEASE", "${SERVER_ADDRESS_RELEASE}"
            resValue "string", "SERVER_ADDRESS_DEBUG", "${SERVER_ADDRESS_DEBUG}"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ext.enableCrashlytics = false
        }
        release {
            resValue "string", "SERVER_ADDRESS_RELEASE", "${SERVER_ADDRESS_RELEASE}"
            resValue "string", "SERVER_ADDRESS_DEBUG", "${SERVER_ADDRESS_DEBUG}"

            //开启资源压缩，必须开启混淆
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', '../proguard-rules.pro', '../tencentx5_proguard.pro'
        }
    }

    dexOptions {
        //增加编译内存
        javaMaxHeapSize "4g"
        jumboMode = true
        preDexLibraries = true
        maxProcessCount = 8
    }

    lintOptions {
        //忽略打包时错误
        checkReleaseBuilds false
        abortOnError false
    }

    aaptOptions {
        cruncherEnabled false
    }
}

dependencies {

    if (libConf.useOnlineAAR) {
        implementation "com.jsongo.basefrm:annotation:${libConf.annotation.aarVer}"
        implementation "com.jsongo.basefrm:core:${libConf.core.aarVer}"
        implementation "com.jsongo.basefrm:ajs:${libConf.ajs.aarVer}"
        implementation "com.jsongo.basefrm:ui:${libConf.ui.aarVer}"
        kapt "com.jsongo.basefrm:processor:${libConf.processor.aarVer}"
    } else {
        implementation project(path: ':annotation')
        implementation project(path: ':core')
        implementation project(path: ':ajs')
        implementation project(path: ':ui')
        kapt project(path: ':processor')
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
